{"version":3,"sources":["pages/Home/Home.jsx","pages/Auth/pages/Login/animations/RunningText.jsx","pages/Auth/components/TextField/TextField.js","pages/Auth/pages/Login/components/EmailField.jsx","pages/Auth/pages/Login/components/EmailView.jsx","pages/Auth/pages/Login/containers/Email.js","pages/Auth/pages/Login/Login.jsx","pages/Auth/Auth.jsx","App.js","apiKeys/apiKeys.js","config/theme.js","assets/fonts/osca.woff2","config/GlobalStyles.js","index.js"],"names":["Home","props","RunningText","textCharCode","children","split","map","char","charCodeAt","e","i","from","offset","Math","floor","random","display","to","delay","duration","length","config","style","String","fromCharCode","TextField","Field","TextFieldWrapper","styled","div","p","theme","warm","TextFieldOctogon","cold","input","EmailField","value","onValueChange","Wrapper","Octogon","type","placeholder","onChange","target","borderAnimation","keyframes","fieldAnimation","EmailView","Label","Email","useState","setValue","newValue","prev","Login","Auth","path","render","App","className","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","GlobalStyles","createGlobalStyle","oscFont","firebase","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69cb0751.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Home(props){\r\n  return (\r\n    <h1>Home</h1>\r\n  )\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Spring } from 'react-spring/renderprops';\r\n\r\nfunction RunningText(props){\r\n  let textCharCode = props.children.split(\"\").map( char => char.charCodeAt() );\r\n\r\n  let animatedText = textCharCode.map( (e, i) => // Надо придумать чтото другое, мне это не нравится\r\n    <Spring\r\n      from={{offset: Math.floor(Math.random() * 100), display: \"none\"}}\r\n      to={{offset: 0, display: \"inline\"}}\r\n      delay={props.duration / textCharCode.length * i}\r\n      config={{duration: props.duration / textCharCode.length}}\r\n      key={i}\r\n    >\r\n      {props => <span style={props}>{String.fromCharCode(e + props.offset)}</span>}\r\n    </Spring>\r\n  );\r\n  \r\n  return animatedText;\r\n};\r\n\r\nexport default RunningText;","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\n\r\nfunction TextField(props){\r\n  return (\r\n    <Field {...props}/>\r\n  )\r\n};\r\n\r\nexport default TextField;\r\n\r\nexport const TextFieldWrapper = styled.div`\r\n  position: relative;\r\n  padding: 10px;\r\n  height: 70px;\r\n  ::before, ::after {\r\n    content: \"\";\r\n\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n\r\n    width: 100%;\r\n    height: 10px;\r\n\r\n    clip-path: polygon(\r\n      0 100%, 10px 0, calc(100% - 10px) 0, 100% 100%, \r\n      calc(100% - 2.5px) 100%, calc(100% - 10.5px) 2px, 11px 2px, 2.5px 100%\r\n    );\r\n    background-image: linear-gradient(to right, transparent 50%, ${ p => p.theme.warm} 50%);\r\n    background-size: 200% 100%;\r\n    background-position: 100% 0;\r\n    \r\n  } \r\n  ::after {\r\n    transform: scale(-1);\r\n    top: auto;\r\n    bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const TextFieldOctogon = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 2px;\r\n\r\n  clip-path: polygon(\r\n    0 10px, 10px 0, calc(100% - 10px) 0, 100% 10px,\r\n    100% calc(100% - 10px), calc(100% - 10px) 100%, 10px 100%, 0 calc(100% - 10px)\r\n  );\r\n  background-color: ${ p => p.theme.cold };\r\n`;\r\n\r\nconst Field = styled.input`\r\n  background-color: #000;\r\n  height: 100%;\r\n  width: 100%;\r\n  padding: 5px 10px;\r\n  border: none;\r\n  color: ${ p => p.theme.cold };\r\n  font-size: 18px;\r\n  transition: .3s;\r\n\r\n  clip-path: polygon(\r\n    0 9px, 9px 0, calc(100% - 9px) 0, 100% 9px,\r\n    100% calc(100% - 9px), calc(100% - 9px) 100%, 9px 100%, 0 calc(100% - 9px)\r\n  );\r\n\r\n  ::placeholder {\r\n    color: inherit;\r\n    opacity: .6;\r\n    font-size: 16px;\r\n  }\r\n\r\n  :focus {\r\n    outline: none;\r\n    background-color: #000000aa;\r\n    ::placeholder {\r\n      opacity: 0;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport TextField, { TextFieldOctogon, \r\n                    TextFieldWrapper } from '../../../components/TextField/TextField';\r\nimport styled, {keyframes} from 'styled-components';\r\n\r\nfunction EmailField({value, onValueChange}){\r\n  return (\r\n    <Wrapper>\r\n      <Octogon>\r\n        <TextField \r\n          type=\"email\" placeholder=\"E-mail\"\r\n          onChange={ e => onValueChange(e.target.value) }\r\n          value={ value }/>\r\n      </Octogon>\r\n    </Wrapper>\r\n  )\r\n};\r\n\r\nexport default EmailField;\r\n\r\n// Styles\r\nconst borderAnimation = keyframes`\r\n  from {\r\n    background-position: 0 0;\r\n  }\r\n  to {\r\n    background-position: 100% 0;\r\n  }\r\n`;\r\nconst fieldAnimation = keyframes`\r\n  from{\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nlet Wrapper = styled(TextFieldWrapper)`\r\n  ::before, ::after {\r\n    animation: ${borderAnimation} 1.2s ease-out 1;\r\n  }\r\n`;\r\nlet Octogon = styled(TextFieldOctogon)`\r\n    animation: ${fieldAnimation} 1.2s ease-in 1;\r\n`;","// React\r\nimport React from 'react';\r\n// Components\r\nimport RunningText from '../animations/RunningText';\r\n// Styles\r\nimport styled from 'styled-components';\r\nimport EmailField from './EmailField';\r\n\r\nfunction EmailView(props){\r\n  \r\n  return (\r\n    <Wrapper>\r\n      <Label>\r\n        <RunningText duration=\"1200\">\r\n          Please identify your person\r\n        </RunningText>\r\n      </Label>\r\n\r\n      <EmailField {...props}/>\r\n    </Wrapper>\r\n  )\r\n};\r\n\r\n\r\n\r\nexport default EmailView;\r\n\r\n// Styles \r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 30%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  width: 600px;\r\n`;\r\nconst Label = styled.div`\r\n  text-transform: uppercase;\r\n  font-size: 18px;\r\n  margin-bottom: 10px;\r\n  transition: .3s;\r\n  height: 30px;\r\n`;\r\n","// React\r\nimport React, { useState } from 'react';\r\n// Components\r\nimport EmailView from '../components/EmailView';\r\n\r\nfunction Email(props){\r\n  let [value, setValue] = useState(\"\");\r\n\r\n  let onValueChange = (newValue) => {\r\n    setValue( prev => newValue);\r\n  };\r\n\r\n  return (\r\n    <EmailView value={ value } onValueChange={ onValueChange }/>\r\n  )\r\n};\r\n\r\nexport default Email;","// React\r\nimport React from 'react';\r\n// Containers\r\nimport Email from './containers/Email';\r\n\r\nfunction Login(props){\r\n  return (\r\n    <div>\r\n      <Email/>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Login;","// React\r\nimport React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n// Styles\r\nimport styled from 'styled-components';\r\n// Components\r\nimport Login from './pages/Login/Login';\r\n\r\nfunction Auth(props){\r\n  return (\r\n    <Wrapper>\r\n      { true // Temporarily for coding\r\n        ? <Redirect to=\"/auth/login\"/> \r\n        : <Redirect to=\"/auth/register\"/> }\r\n\r\n      <Route path=\"/auth/login\" \r\n             render={ () => <Login/>} />\r\n    </Wrapper>\r\n  )\r\n};\r\n\r\nexport default Auth;\r\n\r\n// Styles \r\nlet Wrapper = styled.div`\r\n  display: block;\r\n`;","// React\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n// Components\nimport Home from './pages/Home/Home';\nimport Auth from './pages/Auth/Auth';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      { true // Temporarily for coding\n        ? <Redirect to=\"/auth\"/> \n        : <Redirect to=\"/home\"/> }\n\n      <Route path=\"/home\" \n             render={ () => <Home/> } />\n      <Route path=\"/auth\" \n             render={ () => <Auth/> } />\n    </div>\n  );\n}\n\n\nexport default App;\n","const firebaseConfig = {\r\n  apiKey: \"AIzaSyDa00XZpjC-xINlaIAWZG2PqEeBCNAo0xk\",\r\n  authDomain: \"compendium-aeafb.firebaseapp.com\",\r\n  databaseURL: \"https://compendium-aeafb.firebaseio.com\",\r\n  projectId: \"compendium-aeafb\",\r\n  storageBucket: \"compendium-aeafb.appspot.com\",\r\n  messagingSenderId: \"222813943879\",\r\n  appId: \"1:222813943879:web:a83671bf1d6b60c8c1d962\"\r\n};\r\n\r\nexport default firebaseConfig;\r\n\r\n","export const warm = \"#FF9340\";\r\nexport const cold = \"#33CEC3\";","export default __webpack_public_path__ + \"static/media/osca.e9adc3c9.woff2\";","import React from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport oscFont from '../assets/fonts/osca.woff2'\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  @font-face {\r\n    font-family: 'osc';\r\n    src: url(${oscFont});\r\n  }\r\n  *, *::after, *::before {\r\n    box-sizing: border-box;\r\n    font-family: 'osc', Arial, Helvetica, sans-serif;\r\n  }\r\n  body {\r\n    background-color: #000;\r\n    color: ${ p => p.theme.cold };\r\n  }\r\n`;\r\n\r\nexport default GlobalStyles;","// React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\n\nimport App from './App';\n// API\nimport * as firebase from 'firebase/firebase'; \nimport firebaseConfig from './apiKeys/apiKeys';\n// Styles\nimport { ThemeProvider } from 'styled-components';\nimport * as theme from './config/theme';\nimport GlobalStyles from './config/GlobalStyles';\n\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <ThemeProvider theme={theme}>\n        <GlobalStyles/>\n        <App />   \n      </ThemeProvider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}